#!/usr/bin/env node
'use strict';

var _getIterator2 = require('babel-runtime/core-js/get-iterator');

var _getIterator3 = _interopRequireDefault(_getIterator2);

var _slicedToArray2 = require('babel-runtime/helpers/slicedToArray');

var _slicedToArray3 = _interopRequireDefault(_slicedToArray2);

var _toConsumableArray2 = require('babel-runtime/helpers/toConsumableArray');

var _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);

var _map = require('babel-runtime/core-js/map');

var _map2 = _interopRequireDefault(_map);

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _promise = require('babel-runtime/core-js/promise');

var _promise2 = _interopRequireDefault(_promise);

var list = function () {
  var _ref2 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee2(token) {
    var now, start, deployments, apps, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, dep, deps, sorted, current, text, elapsed;

    return _regenerator2.default.wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            now = new _lib2.default(apiUrl, token, { debug: debug });
            start = new Date();
            deployments = void 0;
            _context2.prev = 3;
            _context2.next = 6;
            return now.list(app);

          case 6:
            deployments = _context2.sent;
            _context2.next = 13;
            break;

          case 9:
            _context2.prev = 9;
            _context2.t0 = _context2['catch'](3);

            (0, _error.handleError)(_context2.t0);
            process.exit(1);

          case 13:

            now.close();

            apps = new _map2.default();
            _iteratorNormalCompletion = true;
            _didIteratorError = false;
            _iteratorError = undefined;
            _context2.prev = 18;


            for (_iterator = (0, _getIterator3.default)(deployments); !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              dep = _step.value;
              deps = apps.get(dep.name) || [];

              apps.set(dep.name, deps.concat(dep));
            }

            _context2.next = 26;
            break;

          case 22:
            _context2.prev = 22;
            _context2.t1 = _context2['catch'](18);
            _didIteratorError = true;
            _iteratorError = _context2.t1;

          case 26:
            _context2.prev = 26;
            _context2.prev = 27;

            if (!_iteratorNormalCompletion && _iterator.return) {
              _iterator.return();
            }

          case 29:
            _context2.prev = 29;

            if (!_didIteratorError) {
              _context2.next = 32;
              break;
            }

            throw _iteratorError;

          case 32:
            return _context2.finish(29);

          case 33:
            return _context2.finish(26);

          case 34:
            _context2.next = 36;
            return sort([].concat((0, _toConsumableArray3.default)(apps)));

          case 36:
            sorted = _context2.sent;
            current = Date.now();
            text = sorted.map(function (_ref3) {
              var _ref4 = (0, _slicedToArray3.default)(_ref3, 2),
                  name = _ref4[0],
                  deps = _ref4[1];

              var t = (0, _textTable2.default)(deps.map(function (_ref5) {
                var uid = _ref5.uid,
                    url = _ref5.url,
                    created = _ref5.created;

                var _url = _chalk2.default.underline('https://' + url);
                var time = _chalk2.default.gray((0, _ms2.default)(current - created) + ' ago');
                return [uid, _url, time];
              }), { align: ['l', 'r', 'l'], hsep: ' '.repeat(6), stringLength: _strlen2.default });
              return _chalk2.default.bold(name) + '\n\n' + (0, _indent2.default)(t, 2);
            }).join('\n\n');
            elapsed = (0, _ms2.default)(new Date() - start);

            console.log('> ' + deployments.length + ' deployment' + (deployments.length === 1 ? '' : 's') + ' found ' + _chalk2.default.gray('[' + elapsed + ']'));

            if (text) {
              console.log('\n' + text + '\n');
            }

          case 42:
          case 'end':
            return _context2.stop();
        }
      }
    }, _callee2, this, [[3, 9], [18, 22, 26, 34], [27,, 29, 33]]);
  }));

  return function list(_x2) {
    return _ref2.apply(this, arguments);
  };
}();

var sort = function () {
  var _ref6 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee3(apps) {
    var pkg, json;
    return _regenerator2.default.wrap(function _callee3$(_context3) {
      while (1) {
        switch (_context3.prev = _context3.next) {
          case 0:
            pkg = void 0;
            _context3.prev = 1;
            _context3.next = 4;
            return _fsPromise2.default.readFile('package.json');

          case 4:
            json = _context3.sent;

            pkg = JSON.parse(json);
            _context3.next = 11;
            break;

          case 8:
            _context3.prev = 8;
            _context3.t0 = _context3['catch'](1);

            pkg = {};

          case 11:
            return _context3.abrupt('return', apps.map(function (_ref7) {
              var _ref8 = (0, _slicedToArray3.default)(_ref7, 2),
                  name = _ref8[0],
                  deps = _ref8[1];

              deps = deps.slice().sort(function (a, b) {
                return b.created - a.created;
              });
              return [name, deps];
            }).sort(function (_ref9, _ref10) {
              var _ref12 = (0, _slicedToArray3.default)(_ref9, 2),
                  nameA = _ref12[0],
                  depsA = _ref12[1];

              var _ref11 = (0, _slicedToArray3.default)(_ref10, 2),
                  nameB = _ref11[0],
                  depsB = _ref11[1];

              if (pkg.name === nameA) {
                return -1;
              }

              if (pkg.name === nameB) {
                return 1;
              }

              return depsB[0].created - depsA[0].created;
            }));

          case 12:
          case 'end':
            return _context3.stop();
        }
      }
    }, _callee3, this, [[1, 8]]);
  }));

  return function sort(_x3) {
    return _ref6.apply(this, arguments);
  };
}();

var _fsPromise = require('fs-promise');

var _fsPromise2 = _interopRequireDefault(_fsPromise);

var _minimist = require('minimist');

var _minimist2 = _interopRequireDefault(_minimist);

var _chalk = require('chalk');

var _chalk2 = _interopRequireDefault(_chalk);

var _textTable = require('text-table');

var _textTable2 = _interopRequireDefault(_textTable);

var _ms = require('ms');

var _ms2 = _interopRequireDefault(_ms);

var _strlen = require('../lib/strlen');

var _strlen2 = _interopRequireDefault(_strlen);

var _indent = require('../lib/indent');

var _indent2 = _interopRequireDefault(_indent);

var _lib = require('../lib');

var _lib2 = _interopRequireDefault(_lib);

var _login = require('../lib/login');

var _login2 = _interopRequireDefault(_login);

var _cfg = require('../lib/cfg');

var cfg = _interopRequireWildcard(_cfg);

var _error = require('../lib/error');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Ours
var argv = (0, _minimist2.default)(process.argv.slice(2), {
  string: ['config', 'token'],
  boolean: ['help', 'debug'],
  alias: {
    help: 'h',
    config: 'c',
    debug: 'd',
    token: 't'
  }
});

// Packages


var help = function help() {
  console.log('\n  ' + _chalk2.default.bold('ùö´ now list') + ' [app]\n\n  ' + _chalk2.default.dim('Options:') + '\n\n    -h, --help              Output usage information\n    -c ' + _chalk2.default.bold.underline('FILE') + ', --config=' + _chalk2.default.bold.underline('FILE') + '  Config file\n    -d, --debug             Debug mode [off]\n    -t ' + _chalk2.default.bold.underline('TOKEN') + ', --token=' + _chalk2.default.bold.underline('TOKEN') + ' Login token\n\n  ' + _chalk2.default.dim('Examples:') + '\n\n  ' + _chalk2.default.gray('‚Äì') + ' List all deployments\n\n    ' + _chalk2.default.cyan('$ now ls') + '\n\n  ' + _chalk2.default.gray('‚Äì') + ' List all deployments for the app ' + _chalk2.default.dim('`my-app`') + '\n\n    ' + _chalk2.default.cyan('$ now ls my-app') + '\n\n  ' + _chalk2.default.dim('Alias:') + ' ls\n');
};

if (argv.help) {
  help();
  process.exit(0);
}

var app = argv._[0];

// options
var debug = argv.debug;
var apiUrl = argv.url || 'https://api.zeit.co';

if (argv.config) {
  cfg.setConfigFile(argv.config);
}

var config = cfg.read();

_promise2.default.resolve(argv.token || config.token || (0, _login2.default)(apiUrl)).then(function () {
  var _ref = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee(token) {
    return _regenerator2.default.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _context.prev = 0;
            _context.next = 3;
            return list(token);

          case 3:
            _context.next = 9;
            break;

          case 5:
            _context.prev = 5;
            _context.t0 = _context['catch'](0);

            (0, _error.error)('Unknown error: ' + _context.t0.stack);
            process.exit(1);

          case 9:
          case 'end':
            return _context.stop();
        }
      }
    }, _callee, undefined, [[0, 5]]);
  }));

  return function (_x) {
    return _ref.apply(this, arguments);
  };
}()).catch(function (e) {
  (0, _error.error)('Authentication error \u2013 ' + e.message);
  process.exit(1);
});