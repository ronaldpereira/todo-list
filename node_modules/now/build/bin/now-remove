#!/usr/bin/env node
'use strict';

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _getIterator2 = require('babel-runtime/core-js/get-iterator');

var _getIterator3 = _interopRequireDefault(_getIterator2);

var _promise = require('babel-runtime/core-js/promise');

var _promise2 = _interopRequireDefault(_promise);

var remove = function () {
  var _ref2 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee2(token) {
    var now, deployments, matches, aliases, i, confirmation, start, elapsed;
    return _regenerator2.default.wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            now = new _lib2.default(apiUrl, token, { debug: debug });
            _context2.next = 3;
            return now.list();

          case 3:
            deployments = _context2.sent;
            matches = deployments.filter(function (d) {
              return ids.find(function (id) {
                // `url` should match the hostname of the deployment
                var u = id.replace(/^https\:\/\//i, '');

                if (u.indexOf('.') === -1) {
                  // `.now.sh` domain is implied if just the subdomain is given
                  u += '.now.sh';
                }

                return d.uid === id || d.name === id || d.url === u;
              });
            });

            if (!(matches.length === 0)) {
              _context2.next = 8;
              break;
            }

            (0, _error.error)('Could not find any deployments matching ' + ids.map(function (id) {
              return _chalk2.default.bold('"' + id + '"');
            }).join(', ') + '. Run ' + _chalk2.default.dim('`now ls`') + ' to list.');
            return _context2.abrupt('return', process.exit(1));

          case 8:
            _context2.next = 10;
            return _promise2.default.all(matches.map(function (depl) {
              return now.listAliases(depl.uid);
            }));

          case 10:
            aliases = _context2.sent;

            for (i = 0; i < matches.length; i++) {
              matches[i].aliases = aliases[i];
            }

            _context2.prev = 12;

            if (skipConfirmation) {
              _context2.next = 18;
              break;
            }

            _context2.next = 16;
            return readConfirmation(matches);

          case 16:
            confirmation = _context2.sent.toLowerCase();


            if (confirmation !== 'y' && confirmation !== 'yes') {
              console.log('\n> Aborted');
              process.exit(0);
            }

          case 18:
            start = new Date();
            _context2.next = 21;
            return _promise2.default.all(matches.map(function (depl) {
              return now.remove(depl.uid, { hard: hard });
            }));

          case 21:
            elapsed = (0, _ms2.default)(new Date() - start);

            console.log(_chalk2.default.cyan('> Success!') + ' [' + elapsed + ']');
            console.log((0, _textTable2.default)(matches.map(function (depl) {
              return ['Deployment ' + _chalk2.default.bold(depl.uid) + ' removed'];
            })));
            _context2.next = 30;
            break;

          case 26:
            _context2.prev = 26;
            _context2.t0 = _context2['catch'](12);

            (0, _error.handleError)(_context2.t0);
            process.exit(1);

          case 30:

            now.close();

          case 31:
          case 'end':
            return _context2.stop();
        }
      }
    }, _callee2, this, [[12, 26]]);
  }));

  return function remove(_x2) {
    return _ref2.apply(this, arguments);
  };
}();

var _minimist = require('minimist');

var _minimist2 = _interopRequireDefault(_minimist);

var _chalk = require('chalk');

var _chalk2 = _interopRequireDefault(_chalk);

var _ms = require('ms');

var _ms2 = _interopRequireDefault(_ms);

var _textTable = require('text-table');

var _textTable2 = _interopRequireDefault(_textTable);

var _lib = require('../lib');

var _lib2 = _interopRequireDefault(_lib);

var _login = require('../lib/login');

var _login2 = _interopRequireDefault(_login);

var _cfg = require('../lib/cfg');

var cfg = _interopRequireWildcard(_cfg);

var _error = require('../lib/error');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Ours


// Packages
var argv = (0, _minimist2.default)(process.argv.slice(2), {
  string: ['config', 'token'],
  boolean: ['help', 'debug', 'hard', 'yes'],
  alias: {
    help: 'h',
    config: 'c',
    debug: 'd',
    token: 't',
    yes: 'y'
  }
});

var ids = argv._;

// options
var help = function help() {
  console.log('\n  ' + _chalk2.default.bold('𝚫 now remove') + ' deploymentId|deploymentName [...deploymentId|deploymentName]\n\n  ' + _chalk2.default.dim('Options:') + '\n\n    -h, --help              Output usage information\n    -c ' + _chalk2.default.bold.underline('FILE') + ', --config=' + _chalk2.default.bold.underline('FILE') + '  Config file\n    -d, --debug             Debug mode [off]\n    -t ' + _chalk2.default.bold.underline('TOKEN') + ', --token=' + _chalk2.default.bold.underline('TOKEN') + ' Login token\n    -y, --yes               Skip confirmation\n\n  ' + _chalk2.default.dim('Examples:') + '\n\n  ' + _chalk2.default.gray('–') + ' Remove a deployment identified by ' + _chalk2.default.dim('`deploymentId`') + ':\n\n    ' + _chalk2.default.cyan('$ now rm deploymentId') + '\n\n  ' + _chalk2.default.gray('–') + ' Remove all deployments with name ' + _chalk2.default.dim('`my-app`') + ':\n\n    ' + _chalk2.default.cyan('$ now rm my-app') + '\n\n  ' + _chalk2.default.gray('–') + ' Remove two deployments with IDs ' + _chalk2.default.dim('`eyWt6zuSdeus`') + ' and ' + _chalk2.default.dim('`uWHoA9RQ1d1o`') + ':\n\n    ' + _chalk2.default.cyan('$ now rm eyWt6zuSdeus uWHoA9RQ1d1o') + '\n\n  ' + _chalk2.default.dim('Alias:') + ' rm\n');
};

if (argv.help || ids.length === 0) {
  help();
  process.exit(0);
}

// options
var debug = argv.debug;
var apiUrl = argv.url || 'https://api.zeit.co';
var hard = argv.hard || false;
var skipConfirmation = argv.yes || false;

if (argv.config) {
  cfg.setConfigFile(argv.config);
}

var config = cfg.read();

function readConfirmation(matches) {
  return new _promise2.default(function (resolve) {
    process.stdout.write('> The following deployment' + (matches.length === 1 ? '' : 's') + ' will be removed permanently:\n');

    var tbl = (0, _textTable2.default)(matches.map(function (depl) {
      var time = _chalk2.default.gray((0, _ms2.default)(new Date() - depl.created) + ' ago');
      var url = _chalk2.default.underline('https://' + depl.url);
      return [depl.uid, url, time];
    }), { align: ['l', 'r', 'l'], hsep: ' '.repeat(6) });
    process.stdout.write(tbl + '\n');

    var _iteratorNormalCompletion = true;
    var _didIteratorError = false;
    var _iteratorError = undefined;

    try {
      for (var _iterator = (0, _getIterator3.default)(matches), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
        var depl = _step.value;
        var _iteratorNormalCompletion2 = true;
        var _didIteratorError2 = false;
        var _iteratorError2 = undefined;

        try {
          for (var _iterator2 = (0, _getIterator3.default)(depl.aliases), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
            var alias = _step2.value;

            process.stdout.write('> ' + _chalk2.default.yellow('Warning!') + ' Deployment ' + _chalk2.default.bold(depl.uid) + ' ' + ('is an alias for ' + _chalk2.default.underline('https://' + alias.alias) + ' and will be removed.\n'));
          }
        } catch (err) {
          _didIteratorError2 = true;
          _iteratorError2 = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion2 && _iterator2.return) {
              _iterator2.return();
            }
          } finally {
            if (_didIteratorError2) {
              throw _iteratorError2;
            }
          }
        }
      }
    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion && _iterator.return) {
          _iterator.return();
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }

    process.stdout.write(_chalk2.default.bold.red('> Are you sure?') + ' ' + _chalk2.default.gray('[y/N] '));

    process.stdin.on('data', function (d) {
      process.stdin.pause();
      resolve(d.toString().trim());
    }).resume();
  });
}

_promise2.default.resolve(argv.token || config.token || (0, _login2.default)(apiUrl)).then(function () {
  var _ref = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee(token) {
    return _regenerator2.default.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _context.prev = 0;
            _context.next = 3;
            return remove(token);

          case 3:
            _context.next = 9;
            break;

          case 5:
            _context.prev = 5;
            _context.t0 = _context['catch'](0);

            (0, _error.error)('Unknown error: ' + _context.t0.stack);
            process.exit(1);

          case 9:
          case 'end':
            return _context.stop();
        }
      }
    }, _callee, undefined, [[0, 5]]);
  }));

  return function (_x) {
    return _ref.apply(this, arguments);
  };
}()).catch(function (e) {
  (0, _error.error)('Authentication error \u2013 ' + e.message);
  process.exit(1);
});