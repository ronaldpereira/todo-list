'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _promise = require('babel-runtime/core-js/promise');

var _promise2 = _interopRequireDefault(_promise);

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _stringify = require('babel-runtime/core-js/json/stringify');

var _stringify2 = _interopRequireDefault(_stringify);

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

// Native
var getVerificationData = function () {
  var _ref = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee(url, email) {
    var tokenName, data, res, body;
    return _regenerator2.default.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            tokenName = 'Now CLI ' + _os2.default.platform() + '-' + _os2.default.arch() + ' ' + _package2.default.version + ' (' + _os2.default.hostname() + ')';
            data = (0, _stringify2.default)({ email: email, tokenName: tokenName });
            _context.next = 4;
            return (0, _nodeFetch2.default)(url + '/now/registration', {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json',
                'Content-Length': Buffer.byteLength(data),
                'User-Agent': _ua2.default
              },
              body: data
            });

          case 4:
            res = _context.sent;

            if (!(res.status !== 200)) {
              _context.next = 7;
              break;
            }

            throw new Error('Verification error');

          case 7:
            _context.next = 9;
            return res.json();

          case 9:
            body = _context.sent;
            return _context.abrupt('return', body);

          case 11:
          case 'end':
            return _context.stop();
        }
      }
    }, _callee, this);
  }));

  return function getVerificationData(_x, _x2) {
    return _ref.apply(this, arguments);
  };
}();

// Ours


// Packages


var verify = function () {
  var _ref2 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee2(url, email, verificationToken) {
    var query, res, body;
    return _regenerator2.default.wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            query = {
              email: email,
              token: verificationToken
            };
            _context2.next = 3;
            return (0, _nodeFetch2.default)(url + '/now/registration/verify?' + (0, _querystring.stringify)(query), {
              headers: { 'User-Agent': _ua2.default }
            });

          case 3:
            res = _context2.sent;
            _context2.next = 6;
            return res.json();

          case 6:
            body = _context2.sent;
            return _context2.abrupt('return', body.token);

          case 8:
          case 'end':
            return _context2.stop();
        }
      }
    }, _callee2, this);
  }));

  return function verify(_x3, _x4, _x5) {
    return _ref2.apply(this, arguments);
  };
}();

var register = function () {
  var _ref3 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee3(url) {
    var _ref4 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
        _ref4$retryEmail = _ref4.retryEmail,
        retryEmail = _ref4$retryEmail === undefined ? false : _ref4$retryEmail;

    var email, _ref5, token, securityCode, spinner, final;

    return _regenerator2.default.wrap(function _callee3$(_context3) {
      while (1) {
        switch (_context3.prev = _context3.next) {
          case 0:
            _context3.next = 2;
            return (0, _emailPrompt2.default)({ invalid: retryEmail });

          case 2:
            email = _context3.sent;

            process.stdout.write('\n');

            if ((0, _emailValidator.validate)(email)) {
              _context3.next = 6;
              break;
            }

            return _context3.abrupt('return', register(url, { retryEmail: true }));

          case 6:
            _context3.next = 8;
            return getVerificationData(url, email);

          case 8:
            _ref5 = _context3.sent;
            token = _ref5.token;
            securityCode = _ref5.securityCode;

            console.log('> Please follow the link sent to ' + _chalk2.default.bold(email) + ' to log in.');

            if (securityCode) {
              console.log('> Verify that the provided security code in the email matches ' + _chalk2.default.cyan(_chalk2.default.bold(securityCode)) + '.');
            }

            process.stdout.write('\n');

            spinner = (0, _ora2.default)({
              text: 'Waiting for confirmation...',
              color: 'black'
            }).start();
            final = void 0;

          case 16:
            _context3.next = 18;
            return sleep(2500);

          case 18:
            _context3.prev = 18;
            _context3.next = 21;
            return verify(url, email, token);

          case 21:
            final = _context3.sent;
            _context3.next = 26;
            break;

          case 24:
            _context3.prev = 24;
            _context3.t0 = _context3['catch'](18);

          case 26:
            if (!final) {
              _context3.next = 16;
              break;
            }

          case 27:

            spinner.text = 'Confirmed email address!';
            spinner.stopAndPersist('âœ”');

            process.stdout.write('\n');

            return _context3.abrupt('return', { email: email, token: final });

          case 31:
          case 'end':
            return _context3.stop();
        }
      }
    }, _callee3, this, [[18, 24]]);
  }));

  return function register(_x6, _x7) {
    return _ref3.apply(this, arguments);
  };
}();

var _os = require('os');

var _os2 = _interopRequireDefault(_os);

var _querystring = require('querystring');

var _chalk = require('chalk');

var _chalk2 = _interopRequireDefault(_chalk);

var _nodeFetch = require('node-fetch');

var _nodeFetch2 = _interopRequireDefault(_nodeFetch);

var _emailValidator = require('email-validator');

var _emailPrompt = require('email-prompt');

var _emailPrompt2 = _interopRequireDefault(_emailPrompt);

var _ora = require('ora');

var _ora2 = _interopRequireDefault(_ora);

var _package = require('../../package');

var _package2 = _interopRequireDefault(_package);

var _ua = require('./ua');

var _ua2 = _interopRequireDefault(_ua);

var _cfg = require('./cfg');

var cfg = _interopRequireWildcard(_cfg);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function sleep(ms) {
  return new _promise2.default(function (resolve) {
    setTimeout(resolve, ms);
  });
}

exports.default = function () {
  var _ref6 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee4(url) {
    var loginData;
    return _regenerator2.default.wrap(function _callee4$(_context4) {
      while (1) {
        switch (_context4.prev = _context4.next) {
          case 0:
            _context4.next = 2;
            return register(url);

          case 2:
            loginData = _context4.sent;

            cfg.merge(loginData);
            return _context4.abrupt('return', loginData.token);

          case 5:
          case 'end':
            return _context4.stop();
        }
      }
    }, _callee4, this);
  }));

  return function (_x9) {
    return _ref6.apply(this, arguments);
  };
}();