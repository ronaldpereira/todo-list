'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _stringify = require('babel-runtime/core-js/json/stringify');

var _stringify2 = _interopRequireDefault(_stringify);

var _assign = require('babel-runtime/core-js/object/assign');

var _assign2 = _interopRequireDefault(_assign);

exports.setConfigFile = setConfigFile;
exports.read = read;
exports.merge = merge;

var _os = require('os');

var _path = require('path');

var _path2 = _interopRequireDefault(_path);

var _fsPromise = require('fs-promise');

var _fsPromise2 = _interopRequireDefault(_fsPromise);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var file = process.env.NOW_JSON ? _path2.default.resolve(process.env.NOW_JSON) : _path2.default.resolve((0, _os.homedir)(), '.now.json');

// Packages
// Native
function setConfigFile(nowjson) {
  file = _path2.default.resolve(nowjson);
}

function read() {
  var existing = null;
  try {
    existing = _fsPromise2.default.readFileSync(file, 'utf8');
    existing = JSON.parse(existing);
  } catch (err) {}
  return existing || {};
}

/**
 * Merges the `data` object onto the
 * JSON config stored in `.now.json`.
 *
 * (atomic)
 * @param {Object} data
 */

function merge(data) {
  var cfg = (0, _assign2.default)({}, read(), data);
  _fsPromise2.default.writeFileSync(file, (0, _stringify2.default)(cfg, null, 2));
}