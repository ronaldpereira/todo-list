'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _chalk = require('chalk');

var _chalk2 = _interopRequireDefault(_chalk);

var _lib = require('../lib');

var _lib2 = _interopRequireDefault(_lib);

var _isZeitWorld = require('./is-zeit-world');

var _isZeitWorld2 = _interopRequireDefault(_isZeitWorld);

var _errors = require('./errors');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Packages
var domainRegex = /^((?=[a-z0-9-]{1,63}\.)(xn--)?[a-z0-9]+(-[a-z0-9]+)*\.)+[a-z]{2,63}$/;

// Ours

var Domains = function (_Now) {
  (0, _inherits3.default)(Domains, _Now);

  function Domains() {
    (0, _classCallCheck3.default)(this, Domains);
    return (0, _possibleConstructorReturn3.default)(this, (Domains.__proto__ || (0, _getPrototypeOf2.default)(Domains)).apply(this, arguments));
  }

  (0, _createClass3.default)(Domains, [{
    key: 'ls',
    value: function () {
      var _ref = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee() {
        return _regenerator2.default.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.next = 2;
                return this.listDomains();

              case 2:
                return _context.abrupt('return', _context.sent);

              case 3:
              case 'end':
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function ls() {
        return _ref.apply(this, arguments);
      }

      return ls;
    }()
  }, {
    key: 'rm',
    value: function () {
      var _ref2 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee3(name) {
        var _this2 = this;

        return _regenerator2.default.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                return _context3.abrupt('return', this.retry(function () {
                  var _ref3 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee2(bail, attempt) {
                    var res, body;
                    return _regenerator2.default.wrap(function _callee2$(_context2) {
                      while (1) {
                        switch (_context2.prev = _context2.next) {
                          case 0:
                            if (_this2._debug) {
                              console.time('> [debug] #' + attempt + ' DELETE /domains/' + name);
                            }

                            _context2.next = 3;
                            return _this2._fetch('/domains/' + name, { method: 'DELETE' });

                          case 3:
                            res = _context2.sent;


                            if (_this2._debug) {
                              console.timeEnd('> [debug] #' + attempt + ' DELETE /domains/' + name);
                            }

                            if (!(res.status === 403)) {
                              _context2.next = 7;
                              break;
                            }

                            return _context2.abrupt('return', bail(new Error('Unauthorized')));

                          case 7:
                            if (!(res.status !== 200)) {
                              _context2.next = 12;
                              break;
                            }

                            _context2.next = 10;
                            return res.json();

                          case 10:
                            body = _context2.sent;
                            throw new Error(body.error.message);

                          case 12:
                          case 'end':
                            return _context2.stop();
                        }
                      }
                    }, _callee2, _this2);
                  }));

                  return function (_x2, _x3) {
                    return _ref3.apply(this, arguments);
                  };
                }()));

              case 1:
              case 'end':
                return _context3.stop();
            }
          }
        }, _callee3, this);
      }));

      function rm(_x) {
        return _ref2.apply(this, arguments);
      }

      return rm;
    }()
  }, {
    key: 'add',
    value: function () {
      var _ref4 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee4(domain, skipVerification, isExternal) {
        var err, ns, res, err2, err3;
        return _regenerator2.default.wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                if (domainRegex.test(domain)) {
                  _context4.next = 4;
                  break;
                }

                err = new Error('The supplied value ' + _chalk2.default.bold('"' + domain + '"') + ' is not a valid domain.');

                err.userError = true;
                throw err;

              case 4:
                if (!(skipVerification || isExternal)) {
                  _context4.next = 6;
                  break;
                }

                return _context4.abrupt('return', this.setupDomain(domain, { isExternal: isExternal }));

              case 6:
                ns = void 0;
                _context4.prev = 7;

                console.log('> Verifying nameserversâ€¦');
                _context4.next = 11;
                return this.getNameservers(domain);

              case 11:
                res = _context4.sent;

                ns = res.nameservers;
                _context4.next = 20;
                break;

              case 15:
                _context4.prev = 15;
                _context4.t0 = _context4['catch'](7);
                err2 = new Error('Unable to fetch nameservers for ' + _chalk2.default.underline(_chalk2.default.bold(domain)) + '.');

                err2.userError = true;
                throw err2;

              case 20:
                if (!(0, _isZeitWorld2.default)(ns)) {
                  _context4.next = 23;
                  break;
                }

                console.log('> Verification ' + _chalk2.default.bold('OK') + '!');
                return _context4.abrupt('return', this.setupDomain(domain));

              case 23:

                if (this._debug) {
                  console.log('> [debug] Supplied domain "' + domain + '" has non-zeit nameservers');
                }

                err3 = new Error(_errors.DNS_VERIFICATION_ERROR);

                err3.userError = true;
                throw err3;

              case 27:
              case 'end':
                return _context4.stop();
            }
          }
        }, _callee4, this, [[7, 15]]);
      }));

      function add(_x4, _x5, _x6) {
        return _ref4.apply(this, arguments);
      }

      return add;
    }()
  }]);
  return Domains;
}(_lib2.default);

exports.default = Domains;